<!doctype html>

   <header>
        <div id="header-bg"></div>
        <h1 class="main-title">Agastya Kalra</h1>
        <section id="subheader">
            <h2>Chess player,<br> software developer, <br>your AI guy.</h2>
            <nav>
                <ul>
                    <li><a href="/" id="back-link">Back to site</a></li>
                </ul>
            </nav>
        </section>
    </header>
    <main>
    <section id="blog" class="info blog-info">
        <h1>All Blog Posts</h1>
        <article id="blog-post-0">
            <h2>Recursively Implementing Breadth First Search Functionally</h2>
            <p>Breadth First Search is an algorithm for searching through a graph one level at a time. My friend told me that it is impossible to do recursively, and so obviously I had to give it a try! Usually BFS is implemented interatively. This is a recursive implementation of BFS in a Scheme dialect known as Racket.</p>
            <a href="/blog/-1" class="more">Read More</a>
        </article>
        <article id="blog-post-0">
            <h2>Vectorizing Forward/Back Propogation for Neural Networks</h2>
            <p>There's a machine learning on coursera that I've been actively following, and in a recent lecture, the professor, Andrew Ng, explained how to implement the backpropogation algorithm. His implementation involved a for-loop going through all the data one at a time. He never actually taught how to do it with pure vectors, so I derived it. Check out how!</p>
            <a href="/blog/0" class="more">Read More</a>
        </article>
        <article id="blog-post-1">
            <h2>The Power of Bits!</h2>
            <p> Learn about using bit vectors to solve problems with increased efficiency. The other day my friend challenged me to solve a certain problem in O(n) time, and so of course I took it.</p>
            <a href="/blog/2" class="more">Read More</a>
            </article>    
            <article id="blog-post-2">
            <h2>Knight's Tour: The Journey</h2>
        <p> The knight's tour: get a knight to travel to all squares on a chessboard exactly once. Usually this problem is done with a specific algorithm. Check out how it can be done with depth first search in Racket!</p>
            <a href="/blog/1" class="more">Read More</a>
            </article>
    </section>
    </main>